MINION 3
# CSETopLevel_number = 0
# CSETopLevel_eliminated_expressions = 0
# CSETopLevel_total_size = 0
# CSE_active_number = 9
# CSE_active_eliminated_expressions = 24
# CSE_active_total_size = 27
**VARIABLES**
DISCRETE perm_ExplicitBounded_Values_00001 #
{1..4}
DISCRETE perm_ExplicitBounded_Values_00002 #
{1..4}
DISCRETE perm_ExplicitBounded_Values_00003 #
{1..4}
DISCRETE perm_ExplicitBounded_Values_00004 #
{1..4}
BOOL aux1 #Active-CSE: 4 occurrences of this expression or equivalent: (perm_ExplicitBounded_Values_00002<perm_ExplicitBounded_Values_00003)
BOOL aux2 #Active-CSE: 4 occurrences of this expression or equivalent: (perm_ExplicitBounded_Values_00002<perm_ExplicitBounded_Values_00004)
BOOL aux3 #Active-CSE: 2 occurrences of this expression or equivalent: (perm_ExplicitBounded_Values_00003<=perm_ExplicitBounded_Values_00004)
BOOL aux4 #Active-CSE: 2 occurrences of this expression or equivalent: (perm_ExplicitBounded_Values_00003<=perm_ExplicitBounded_Values_00001)
BOOL aux5 #Active-CSE: 4 occurrences of this expression or equivalent: (perm_ExplicitBounded_Values_00004<=perm_ExplicitBounded_Values_00003)
BOOL aux6 #Active-CSE: 2 occurrences of this expression or equivalent: (perm_ExplicitBounded_Values_00004<=perm_ExplicitBounded_Values_00001)
BOOL aux7 #Active-CSE: 2 occurrences of this expression or equivalent: (perm_ExplicitBounded_Values_00002<=perm_ExplicitBounded_Values_00003)
BOOL aux8 #Active-CSE: 2 occurrences of this expression or equivalent: (perm_ExplicitBounded_Values_00002<=perm_ExplicitBounded_Values_00004)
BOOL aux9 #Active-CSE: 2 occurrences of this expression or equivalent: (perm_ExplicitBounded_Values_00002<=perm_ExplicitBounded_Values_00001)
**VARIABLES**
ALIAS mixed_avoidance_ExplicitR16R18R5_2_RelationAsSet_ExplicitVarSizeWithMarker_Marker[1]=[0]
**VARIABLES**
ALIAS aux0[3]=[0, 0, 0]
**TUPLELIST**
mixed_avoidance_ExplicitR16R18R5_2_RelationAsSet_ExplicitVarSizeWithMarker_Values_2 1 0

**TUPLELIST**
mixed_avoidance_ExplicitR16R18R5_2_RelationAsSet_ExplicitVarSizeWithMarker_Values_1 1 0

**VARIABLES**
ALIAS mixed_avoidance_ExplicitR16R18R5_1_ExplicitBounded_Length[1]=[3]
**TUPLELIST**
mixed_avoidance_ExplicitR16R18R5_1_ExplicitBounded_Values 1 3
1 3 2 
**VARIABLES**
ALIAS mixed_avoidance_ExplicitR16R18R5_1_ExplicitBounded_Values[1,3]=[[1, 3, 2]]
**SEARCH**
PRINT[[perm_ExplicitBounded_Values_00001],[perm_ExplicitBounded_Values_00002],[perm_ExplicitBounded_Values_00003],[perm_ExplicitBounded_Values_00004]]
**CONSTRAINTS**
reify(ineq(perm_ExplicitBounded_Values_00002, perm_ExplicitBounded_Values_00003, -1), aux1)
reify(ineq(perm_ExplicitBounded_Values_00002, perm_ExplicitBounded_Values_00004, -1), aux2)
reify(ineq(perm_ExplicitBounded_Values_00003, perm_ExplicitBounded_Values_00004, 0), aux3)
reify(ineq(perm_ExplicitBounded_Values_00003, perm_ExplicitBounded_Values_00001, 0), aux4)
reify(ineq(perm_ExplicitBounded_Values_00004, perm_ExplicitBounded_Values_00003, 0), aux5)
reify(ineq(perm_ExplicitBounded_Values_00004, perm_ExplicitBounded_Values_00001, 0), aux6)
reify(ineq(perm_ExplicitBounded_Values_00002, perm_ExplicitBounded_Values_00003, 0), aux7)
reify(ineq(perm_ExplicitBounded_Values_00002, perm_ExplicitBounded_Values_00004, 0), aux8)
reify(ineq(perm_ExplicitBounded_Values_00002, perm_ExplicitBounded_Values_00001, 0), aux9)
gacalldiff([perm_ExplicitBounded_Values_00001, perm_ExplicitBounded_Values_00002, perm_ExplicitBounded_Values_00003, perm_ExplicitBounded_Values_00004])
watched-or({w-literal(aux9,1),w-literal(aux8,1),w-literal(aux4,1),watched-and({ineq(perm_ExplicitBounded_Values_00001, perm_ExplicitBounded_Values_00004, 0),w-literal(aux5,1)}),watched-and({w-literal(aux3,1),w-literal(aux2,0)}),w-literal(aux1,1)})
watched-or({w-literal(aux9,1),w-literal(aux7,1),w-literal(aux6,1),watched-and({ineq(perm_ExplicitBounded_Values_00001, perm_ExplicitBounded_Values_00003, 0),w-literal(aux3,1)}),watched-and({w-literal(aux1,0),w-literal(aux5,1)}),w-literal(aux2,1)})
watched-or({w-literal(aux4,1),w-literal(aux1,0),w-literal(aux6,1),watched-and({ineq(perm_ExplicitBounded_Values_00001, perm_ExplicitBounded_Values_00002, 0),w-literal(aux8,1)}),watched-and({w-literal(aux7,1),w-literal(aux2,0)}),w-literal(aux5,0)})
watched-or({w-literal(aux1,0),w-literal(aux2,0),w-literal(aux5,0)})
**EOF**
