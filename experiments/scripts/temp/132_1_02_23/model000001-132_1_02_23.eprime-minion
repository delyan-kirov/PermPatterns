MINION 3
# CSETopLevel_number = 0
# CSETopLevel_eliminated_expressions = 0
# CSETopLevel_total_size = 0
# CSE_active_number = 25
# CSE_active_eliminated_expressions = 69
# CSE_active_total_size = 75
**VARIABLES**
DISCRETE perm_ExplicitBounded_Values_00001 #
{1..7}
DISCRETE perm_ExplicitBounded_Values_00002 #
{1..7}
DISCRETE perm_ExplicitBounded_Values_00003 #
{1..7}
DISCRETE perm_ExplicitBounded_Values_00004 #
{1..7}
DISCRETE perm_ExplicitBounded_Values_00005 #
{1..7}
DISCRETE perm_ExplicitBounded_Values_00006 #
{1..7}
DISCRETE perm_ExplicitBounded_Values_00007 #
{1..7}
DISCRETE aux1 #Active-CSE: 2 occurrences of this expression or equivalent: (perm_ExplicitBounded_Values_00004 + 1)
{2..8}
DISCRETE aux2 #Active-CSE: 3 occurrences of this expression or equivalent: (perm_ExplicitBounded_Values_00005 + 1)
{2..8}
BOOL aux3 #Active-CSE: 5 occurrences of this expression or equivalent: (perm_ExplicitBounded_Values_00003<=perm_ExplicitBounded_Values_00002)
BOOL aux4 #Active-CSE: 4 occurrences of this expression or equivalent: (perm_ExplicitBounded_Values_00002<=perm_ExplicitBounded_Values_00003)
BOOL aux5 #Active-CSE: 2 occurrences of this expression or equivalent: (perm_ExplicitBounded_Values_00002<perm_ExplicitBounded_Values_00006)
BOOL aux6 #Active-CSE: 2 occurrences of this expression or equivalent: (perm_ExplicitBounded_Values_00003<perm_ExplicitBounded_Values_00007)
BOOL aux7 #Active-CSE: 2 occurrences of this expression or equivalent: (perm_ExplicitBounded_Values_00002<perm_ExplicitBounded_Values_00005)
BOOL aux8 #Active-CSE: 2 occurrences of this expression or equivalent: (perm_ExplicitBounded_Values_00004<perm_ExplicitBounded_Values_00007)
BOOL aux9 #Active-CSE: 3 occurrences of this expression or equivalent: (perm_ExplicitBounded_Values_00004<perm_ExplicitBounded_Values_00005)
BOOL aux10 #Active-CSE: 2 occurrences of this expression or equivalent: (perm_ExplicitBounded_Values_00006<=perm_ExplicitBounded_Values_00005)
BOOL aux11 #Active-CSE: 2 occurrences of this expression or equivalent: (perm_ExplicitBounded_Values_00006<=perm_ExplicitBounded_Values_00003)
BOOL aux12 #Active-CSE: 2 occurrences of this expression or equivalent: (perm_ExplicitBounded_Values_00002<perm_ExplicitBounded_Values_00004)
BOOL aux13 #Active-CSE: 2 occurrences of this expression or equivalent: (perm_ExplicitBounded_Values_00004<perm_ExplicitBounded_Values_00006)
BOOL aux14 #Active-CSE: 2 occurrences of this expression or equivalent: (perm_ExplicitBounded_Values_00007<=perm_ExplicitBounded_Values_00002)
BOOL aux15 #Active-CSE: 2 occurrences of this expression or equivalent: (perm_ExplicitBounded_Values_00005<perm_ExplicitBounded_Values_00007)
BOOL aux16 #Active-CSE: 4 occurrences of this expression or equivalent: (perm_ExplicitBounded_Values_00003<perm_ExplicitBounded_Values_00004)
BOOL aux17 #Active-CSE: 2 occurrences of this expression or equivalent: (perm_ExplicitBounded_Values_00003<perm_ExplicitBounded_Values_00005)
BOOL aux18 #Active-CSE: 2 occurrences of this expression or equivalent: (perm_ExplicitBounded_Values_00003<=perm_ExplicitBounded_Values_00005)
BOOL aux19 #Active-CSE: 2 occurrences of this expression or equivalent: (perm_ExplicitBounded_Values_00004<=perm_ExplicitBounded_Values_00005)
BOOL aux20 #Active-CSE: 2 occurrences of this expression or equivalent: (perm_ExplicitBounded_Values_00002<=perm_ExplicitBounded_Values_00005)
BOOL aux21 #Active-CSE: 3 occurrences of this expression or equivalent: (perm_ExplicitBounded_Values_00003<=perm_ExplicitBounded_Values_00004)
BOOL aux22 #Active-CSE: 3 occurrences of this expression or equivalent: (perm_ExplicitBounded_Values_00002<=perm_ExplicitBounded_Values_00004)
DISCRETE aux23 #Active-CSE: 4 occurrences of this expression or equivalent: (perm_ExplicitBounded_Values_00006 + 1)
{2..8}
DISCRETE aux24 #Active-CSE: 5 occurrences of this expression or equivalent: (perm_ExplicitBounded_Values_00007 + 1)
{2..8}
BOOL aux25 #Active-CSE: 5 occurrences of this expression or equivalent: (perm_ExplicitBounded_Values_00002<=perm_ExplicitBounded_Values_00001)
DISCRETE aux26 #(perm_ExplicitBounded_Values_00003 + 1)
{2..8}
**VARIABLES**
ALIAS aux0[3]=[0, 0, 0]
**TUPLELIST**
mixed_avoidance_ExplicitR16R18R5R6R6_2_RelationAsSet_ExplicitVarSizeWithMarker_Values_2 1 1
3 
**VARIABLES**
ALIAS mixed_avoidance_ExplicitR16R18R5R6R6_2_RelationAsSet_ExplicitVarSizeWithMarker_Values_2[1,1]=[[3]]
**TUPLELIST**
mixed_avoidance_ExplicitR16R18R5R6R6_2_RelationAsSet_ExplicitVarSizeWithMarker_Values_1 1 1
2 
**VARIABLES**
ALIAS mixed_avoidance_ExplicitR16R18R5R6R6_2_RelationAsSet_ExplicitVarSizeWithMarker_Values_1[1,1]=[[2]]
**TUPLELIST**
mixed_avoidance_ExplicitR16R18R5R6R6_4_ExplicitVarSizeWithDummy 1 2
0 2 
**VARIABLES**
ALIAS mixed_avoidance_ExplicitR16R18R5R6R6_4_ExplicitVarSizeWithDummy[1,2]=[[0, 2]]
**VARIABLES**
ALIAS mixed_avoidance_ExplicitR16R18R5R6R6_1_ExplicitBounded_Length[1]=[3]
**VARIABLES**
ALIAS mixed_avoidance_ExplicitR16R18R5R6R6_2_RelationAsSet_ExplicitVarSizeWithMarker_Marker[1]=[1]
**TUPLELIST**
mixed_avoidance_ExplicitR16R18R5R6R6_3_ExplicitVarSizeWithDummy 1 1
1 
**VARIABLES**
ALIAS mixed_avoidance_ExplicitR16R18R5R6R6_3_ExplicitVarSizeWithDummy[1,1]=[[1]]
**TUPLELIST**
mixed_avoidance_ExplicitR16R18R5R6R6_1_ExplicitBounded_Values 1 3
1 3 2 
**VARIABLES**
ALIAS mixed_avoidance_ExplicitR16R18R5R6R6_1_ExplicitBounded_Values[1,3]=[[1, 3, 2]]
**SEARCH**
PRINT[[perm_ExplicitBounded_Values_00001],[perm_ExplicitBounded_Values_00002],[perm_ExplicitBounded_Values_00003],[perm_ExplicitBounded_Values_00004],[perm_ExplicitBounded_Values_00005],[perm_ExplicitBounded_Values_00006],[perm_ExplicitBounded_Values_00007]]
**CONSTRAINTS**
reify(ineq(perm_ExplicitBounded_Values_00003, perm_ExplicitBounded_Values_00002, 0), aux3)
reify(ineq(perm_ExplicitBounded_Values_00002, perm_ExplicitBounded_Values_00003, 0), aux4)
reify(ineq(perm_ExplicitBounded_Values_00002, perm_ExplicitBounded_Values_00006, -1), aux5)
reify(ineq(perm_ExplicitBounded_Values_00003, perm_ExplicitBounded_Values_00007, -1), aux6)
reify(ineq(perm_ExplicitBounded_Values_00002, perm_ExplicitBounded_Values_00005, -1), aux7)
reify(ineq(perm_ExplicitBounded_Values_00004, perm_ExplicitBounded_Values_00007, -1), aux8)
reify(ineq(perm_ExplicitBounded_Values_00004, perm_ExplicitBounded_Values_00005, -1), aux9)
reify(ineq(perm_ExplicitBounded_Values_00006, perm_ExplicitBounded_Values_00005, 0), aux10)
reify(ineq(perm_ExplicitBounded_Values_00006, perm_ExplicitBounded_Values_00003, 0), aux11)
reify(ineq(perm_ExplicitBounded_Values_00002, perm_ExplicitBounded_Values_00004, -1), aux12)
reify(ineq(perm_ExplicitBounded_Values_00004, perm_ExplicitBounded_Values_00006, -1), aux13)
reify(ineq(perm_ExplicitBounded_Values_00007, perm_ExplicitBounded_Values_00002, 0), aux14)
reify(ineq(perm_ExplicitBounded_Values_00005, perm_ExplicitBounded_Values_00007, -1), aux15)
reify(ineq(perm_ExplicitBounded_Values_00003, perm_ExplicitBounded_Values_00004, -1), aux16)
reify(ineq(perm_ExplicitBounded_Values_00003, perm_ExplicitBounded_Values_00005, -1), aux17)
reify(ineq(perm_ExplicitBounded_Values_00003, perm_ExplicitBounded_Values_00005, 0), aux18)
reify(ineq(perm_ExplicitBounded_Values_00004, perm_ExplicitBounded_Values_00005, 0), aux19)
reify(ineq(perm_ExplicitBounded_Values_00002, perm_ExplicitBounded_Values_00005, 0), aux20)
reify(ineq(perm_ExplicitBounded_Values_00003, perm_ExplicitBounded_Values_00004, 0), aux21)
reify(ineq(perm_ExplicitBounded_Values_00002, perm_ExplicitBounded_Values_00004, 0), aux22)
reify(ineq(perm_ExplicitBounded_Values_00002, perm_ExplicitBounded_Values_00001, 0), aux25)
gacalldiff([perm_ExplicitBounded_Values_00001, perm_ExplicitBounded_Values_00002, perm_ExplicitBounded_Values_00003, perm_ExplicitBounded_Values_00004, perm_ExplicitBounded_Values_00005, perm_ExplicitBounded_Values_00006, perm_ExplicitBounded_Values_00007])
watched-or({w-literal(aux25,1),ineq(perm_ExplicitBounded_Values_00003, perm_ExplicitBounded_Values_00001, 0),diseq(perm_ExplicitBounded_Values_00001,1),diseq(perm_ExplicitBounded_Values_00002,aux26),w-literal(aux3,0)})
watched-or({w-literal(aux25,1),w-literal(aux4,1),ineq(perm_ExplicitBounded_Values_00004, perm_ExplicitBounded_Values_00001, 0),diseq(perm_ExplicitBounded_Values_00001,1),diseq(perm_ExplicitBounded_Values_00002,aux1),w-literal(aux12,1)})
watched-or({w-literal(aux25,1),w-literal(aux4,1),w-literal(aux22,1),ineq(perm_ExplicitBounded_Values_00005, perm_ExplicitBounded_Values_00001, 0),diseq(perm_ExplicitBounded_Values_00001,1),diseq(perm_ExplicitBounded_Values_00002,aux2),w-literal(aux7,1)})
watched-or({w-literal(aux25,1),w-literal(aux4,1),w-literal(aux22,1),w-literal(aux20,1),ineq(perm_ExplicitBounded_Values_00006, perm_ExplicitBounded_Values_00001, 0),diseq(perm_ExplicitBounded_Values_00001,1),diseq(perm_ExplicitBounded_Values_00002,aux23),w-literal(aux5,1)})
watched-or({w-literal(aux25,1),w-literal(aux4,1),w-literal(aux22,1),w-literal(aux20,1),ineq(perm_ExplicitBounded_Values_00002, perm_ExplicitBounded_Values_00006, 0),ineq(perm_ExplicitBounded_Values_00007, perm_ExplicitBounded_Values_00001, 0),diseq(perm_ExplicitBounded_Values_00001,1),diseq(perm_ExplicitBounded_Values_00002,aux24),w-literal(aux14,0)})
watched-or({w-literal(aux3,1),w-literal(aux12,0),diseq(perm_ExplicitBounded_Values_00002,1),diseq(perm_ExplicitBounded_Values_00003,aux1),w-literal(aux16,1)})
watched-or({w-literal(aux3,1),w-literal(aux21,1),w-literal(aux7,0),diseq(perm_ExplicitBounded_Values_00002,1),diseq(perm_ExplicitBounded_Values_00003,aux2),w-literal(aux17,1)})
watched-or({w-literal(aux3,1),w-literal(aux21,1),w-literal(aux18,1),w-literal(aux5,0),diseq(perm_ExplicitBounded_Values_00002,1),diseq(perm_ExplicitBounded_Values_00003,aux23),w-literal(aux11,0)})
watched-or({w-literal(aux3,1),w-literal(aux21,1),w-literal(aux18,1),ineq(perm_ExplicitBounded_Values_00003, perm_ExplicitBounded_Values_00006, 0),w-literal(aux14,1),diseq(perm_ExplicitBounded_Values_00002,1),diseq(perm_ExplicitBounded_Values_00003,aux24),w-literal(aux6,1)})
watched-or({w-literal(aux16,0),w-literal(aux17,0),diseq(perm_ExplicitBounded_Values_00003,1),diseq(perm_ExplicitBounded_Values_00004,aux2),w-literal(aux9,1)})
watched-or({w-literal(aux16,0),w-literal(aux19,1),w-literal(aux11,1),diseq(perm_ExplicitBounded_Values_00003,1),diseq(perm_ExplicitBounded_Values_00004,aux23),w-literal(aux13,1)})
watched-or({w-literal(aux16,0),w-literal(aux19,1),ineq(perm_ExplicitBounded_Values_00004, perm_ExplicitBounded_Values_00006, 0),w-literal(aux6,0),diseq(perm_ExplicitBounded_Values_00003,1),diseq(perm_ExplicitBounded_Values_00004,aux24),w-literal(aux8,1)})
watched-or({w-literal(aux9,0),w-literal(aux13,0),diseq(perm_ExplicitBounded_Values_00004,1),diseq(perm_ExplicitBounded_Values_00005,aux23),w-literal(aux10,0)})
watched-or({w-literal(aux9,0),ineq(perm_ExplicitBounded_Values_00005, perm_ExplicitBounded_Values_00006, 0),w-literal(aux8,0),diseq(perm_ExplicitBounded_Values_00004,1),diseq(perm_ExplicitBounded_Values_00005,aux24),w-literal(aux15,1)})
watched-or({w-literal(aux10,1),w-literal(aux15,0),diseq(perm_ExplicitBounded_Values_00005,1),diseq(perm_ExplicitBounded_Values_00006,aux24),ineq(perm_ExplicitBounded_Values_00006, perm_ExplicitBounded_Values_00007, -1)})
sumleq([perm_ExplicitBounded_Values_00003,1],aux26)
sumgeq([perm_ExplicitBounded_Values_00003,1],aux26)
sumleq([perm_ExplicitBounded_Values_00004,1],aux1)
sumgeq([perm_ExplicitBounded_Values_00004,1],aux1)
sumleq([perm_ExplicitBounded_Values_00005,1],aux2)
sumgeq([perm_ExplicitBounded_Values_00005,1],aux2)
sumleq([perm_ExplicitBounded_Values_00006,1],aux23)
sumgeq([perm_ExplicitBounded_Values_00006,1],aux23)
sumleq([perm_ExplicitBounded_Values_00007,1],aux24)
sumgeq([perm_ExplicitBounded_Values_00007,1],aux24)
**EOF**
